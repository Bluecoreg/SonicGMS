<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize
image_speed = 0;

fname = "settings.ini";

default_keyboard_up = vk_up;
default_keyboard_down = vk_down;
default_keyboard_left = vk_left;
default_keyboard_right = vk_right;
default_keyboard_a = ord("A");
default_keyboard_b = ord("S");
default_keyboard_c = ord("D");
default_keyboard_start = vk_enter;

default_gamepad_up = gp_padu;
default_gamepad_down = gp_padd;
default_gamepad_left = gp_padl;
default_gamepad_right = gp_padr;
default_gamepad_a = gp_face3;
default_gamepad_b = gp_face1;
default_gamepad_c = gp_face2;
default_gamepad_start = gp_start;
default_gamepad_axis_v = gp_axislv;
default_gamepad_axis_h = gp_axislh;

total_channels = 4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Write
ini_open(fname);

var section = "controls_keyboard";

with (Keyboard) {
    for (var key = ds_map_find_first(buttons);
        not is_undefined(key);
        key = ds_map_find_next(buttons, key)) {
        ini_write_real(section, buttons[? key], key);
    }
}

var index;
with (Gamepad) {
    if (channel &gt; -1) {
        section = "controls_gamepad" + string(channel);
        for (index = ds_map_find_first(buttons);
            not is_undefined(index);
            index = ds_map_find_next(buttons, index)) {
            ini_write_real(section, buttons[? index], index);
        }
        for (index = ds_map_find_first(axes_positive);
            not is_undefined(index);
            index = ds_map_find_next(axes_positive, index)) {
            ini_write_real(section, "axis_" + axes_positive[? index], index);
        }
        for (index = ds_map_find_first(axes_negative);
            not is_undefined(index);
            index = ds_map_find_next(axes_negative, index)) {
            ini_write_real(section, "axis_" + axes_negative[? index], index);
        }
    }
}

ini_close();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Read
ini_open(fname);
var section = "controls_keyboard";
game_input_event_map_key("up", ini_read_real(section, "up", default_keyboard_up));
game_input_event_map_key("down", ini_read_real(section, "down", default_keyboard_down));
game_input_event_map_key("left", ini_read_real(section, "left", default_keyboard_left));
game_input_event_map_key("right", ini_read_real(section, "right", default_keyboard_right));
game_input_event_map_key("a", ini_read_real(section, "a", default_keyboard_a));
game_input_event_map_key("b", ini_read_real(section, "b", default_keyboard_b));
game_input_event_map_key("c", ini_read_real(section, "c", default_keyboard_c));
game_input_event_map_key("start", ini_read_real(section, "start", default_keyboard_start));
for (var channel = 0; channel &lt; total_channels; ++channel) {
    section = "controls_gamepad" + string(channel);
    game_input_event_map_button(channel, "up", ini_read_real(section, "up", default_gamepad_up));
    game_input_event_map_button(channel, "down", ini_read_real(section, "down", default_gamepad_down));
    game_input_event_map_button(channel, "left", ini_read_real(section, "left", default_gamepad_left));
    game_input_event_map_button(channel, "right", ini_read_real(section, "right", default_gamepad_right));
    game_input_event_map_button(channel, "a", ini_read_real(section, "a", default_gamepad_a));
    game_input_event_map_button(channel, "b", ini_read_real(section, "b", default_gamepad_b));
    game_input_event_map_button(channel, "c", ini_read_real(section, "c", default_gamepad_c));
    game_input_event_map_button(channel, "start", ini_read_real(section, "start", default_gamepad_start));
    game_input_event_map_negative_axis(channel, "up", ini_read_real(section, "axis_up", default_gamepad_axis_v));
    game_input_event_map_positive_axis(channel, "down", ini_read_real(section, "axis_down", default_gamepad_axis_v));
    game_input_event_map_negative_axis(channel, "left", ini_read_real(section, "axis_left", default_gamepad_axis_h));
    game_input_event_map_positive_axis(channel, "right", ini_read_real(section, "axis_right", default_gamepad_axis_h));
}
ini_close();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Finish
event_user(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Start
event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
