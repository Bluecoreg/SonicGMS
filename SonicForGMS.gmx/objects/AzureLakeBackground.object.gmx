<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize
image_speed = 0;

var back = AzureLakeBack;
var vscroll = (room_height - background_get_height(back)) / (room_height - CAMERA_HEIGHT);

// clouds
game_parallax_add_layer(back, 0, 0, 256, 32, 0, 0, true, false, 0.85, vscroll, 0, 0, -0.4, 0);
game_parallax_add_layer(back, 0, 32, 256, 16, 0, 32, true, false, 0.83, vscroll, 0, 0, -0.3, 0);
game_parallax_add_layer(back, 0, 48, 256, 16, 0, 48, true, false, 0.80, vscroll, 0, 0, -0.2, 0);

// mountains
game_parallax_add_layer(back, 0, 64, 256, 46, 0, 64, true, false, 0.74, vscroll);

// forest
game_parallax_add_layer(back, 0, 110, 256, 25, 0, 110, true, false, 0.71, vscroll);

scanlines = 11;
var step = 41 / scanlines;
var n;

// reflection
for (n = 0; n &lt; scanlines; ++n) {
    scan[n] = game_parallax_add_layer(back, 0, 135 + floor(n * step), 256, ceil(step), 0, 135 + floor(n * step), true, false, 0.71, vscroll);
}

// foreground
for (n = 0; n &lt; 10; ++n) {
    game_parallax_add_layer(back, 0, 176 + n * 8, 256, 8, 0, 176 + n * 8, true, false, 0.5 - ((1 + n) / 15) * 0.5, vscroll);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Ripple reflection
if (game_is_running()) {
    for (var n = 0; n &lt; scanlines - 1; ++n) {
        scan[n].x = cos(game_clock_get_step() / 13.2 + n * 0.87) * 3;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
