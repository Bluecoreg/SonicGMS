<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>GameSuspension</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize
image_speed = 0;
image_alpha = 0;

phase = 0;

display_time = 1; // 120

fade_speed = 0.0455;
fade_background_alpha = 0.75;
fade_background_color = c_black;

font = global.CrackersFont
font_color = c_white;

text = "THIS IS A NON-PROFIT FAN-BASED PROJECT FOR FREEWARE DISTRIBUTION ONLY. ALL COPYRIGHTS AND REGISTERED TRADEMARKS OF 'SONIC THE HEDGEHOG' AND ALL ASSOCIATED CHARACTERS, ART, NAMES, TERMS AND MUSIC BELONG TO SEGA®. THE CONTRIBUTORS TO THIS SOFTWARE ARE IN NO WAY AFFILIATED WITH SEGA® OR SONIC TEAM®, NOR IS ANY INTENT MADE TO GAIN FINANCIALLY FROM OR INFRINGE UPON SAID COPYRIGHTS OR REGISTERED TRADEMARKS."
text_ox = camera_width * 0.5;
text_oy = camera_height * 0.5;
text_separation = 8;
text_width = camera_width * 0.875;

press_start_text = "PRESS F1";
press_start_ox = camera_width * 0.5;
press_start_oy = camera_height * 0.75; //0.875;
press_start_alpha = 0;
press_start_sin = 0;
press_start_blink_speed = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Continue
phase = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Display
switch (phase) {
case 0: // fade-in
    image_alpha += fade_speed;
    if (image_alpha &gt;= 1) {
        image_alpha = 1;
        alarm[0] = display_time;
        phase = 1;
    }
    break;

case 1: // do nothing
    break;

case 2: // press start
    press_start_sin += press_start_blink_speed;
    press_start_alpha = abs(dsin(press_start_sin));
    if (keyboard_check_pressed(vk_f1)) { //game_input_event_pressed("start")) {
        phase = 3;
    }
    break;

case 3: // fade out
    image_alpha -= fade_speed;
    if (image_alpha &lt;= 0) {
        instance_destroy();
    }
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw
var color = draw_get_color();
var alpha = draw_get_alpha();

draw_set_color(fade_background_color);
draw_set_alpha(fade_background_alpha * image_alpha);
draw_rectangle(0, 0, camera_width, camera_height, false);

draw_set_font(font);
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_set_color(font_color);
draw_set_alpha(image_alpha);
draw_text_ext(text_ox, text_oy, text, text_separation, text_width);
draw_set_alpha(press_start_alpha * image_alpha);
draw_text(press_start_ox, press_start_oy, press_start_text);
draw_set_color(color);
draw_set_alpha(alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
