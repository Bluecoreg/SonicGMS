<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>GameMenuPage</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize
name = "select";
event_descend = "left";
event_ascend = "right";

mode = "select";

cursor = noone;
delete_icon = noone;

var start_x = 11;
var start_y = 11;
var separation = 8;
var nosave_ox = 38;
var nosave_w = 88 + separation;
var save_ox = 44;
var save_w = 96 + separation;

// no save option
choice_nosave = instance_create(start_x + nosave_ox, start_y, FileSelectMenuNoSaveChoice);
game_menu_page_add_choice(self, choice_nosave);

// save files
var file;
for (var n = 0; n &lt; MAX_GAME_SAVES; ++n) {
    file = game_save_find(n);
    if (instance_exists(file)) {
        if (file.complete) {
            choice_save[n] = instance_create(start_x + nosave_w + save_ox + (n * save_w), start_y, FileSelectMenuCompleteFileChoice);
            choice_save[n].name = "complete" + string(n);
        } else {
            choice_save[n] = instance_create(start_x + nosave_w + save_ox + (n * save_w), start_y, FileSelectMenuExistingFileChoice);
            choice_save[n].name = "existing" + string(n);
        }
        choice_save[n].file_index = n;
        instance_perform_user_event(choice_save[n], 1);
    } else {
        choice_save[n] = instance_create(start_x + nosave_w + save_ox + (n * save_w), start_y, FileSelectMenuNewFileChoice);
        choice_save[n].name = "new" + string(n);
        choice_save[n].file_index = n;
    }
    game_menu_page_add_choice(self, choice_save[n]);
}

var starting_slot = choice_save[0];
with (GameSaveDirectory) {
    if (in_range(index, -1, MAX_GAME_SAVES)) {
        starting_slot = other.choice_save[index];
    }
}

instance_perform_user_event(starting_slot, 0);

// delete option
choice_delete = instance_create(start_x + nosave_w + (MAX_GAME_SAVES * save_w) + nosave_ox, start_y, FileSelectMenuDeleteChoice);
game_menu_page_add_choice(self, choice_delete);

// delete icon
delete_icon = instance_create(choice_delete.x, choice_delete.y, FileSelectMenuDeleteIcon);

// cursor
cursor = instance_create(starting_slot.x, starting_slot.y, FileSelectMenuCursor);
game_camera_direct(0, game_camera_default_behavior, cursor);
view_hborder[0] = camera_width * 0.5;
with (cursor) {
    game_camera_default_behavior(0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update
if (game_is_running()) {
    if (enabled and not ds_list_empty(choices) and alarm[0] &lt;= 0) {
        if (game_input_event_pressed(event_select)) {
            if (selection != noone) {
                show_debug_message(name + " [" + string(index) + "] : " + selection.name);
                event_user(2);
            }
        } else if (game_input_event_pressed(event_ascend)) {
            event_user(0);
        } else if (game_input_event_pressed(event_descend)) {
            event_user(1);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Select
var name = string_letters(selection.name);
switch (mode) {
case "confirm":
    // does not use confirm button
    break;

case "delete":
    switch (name) {
    case "complete":
    case "existing":
        game_audio_play_sound(LampPostSound);
        mode = "confirm";
        delete_icon.mode = "confirm";
        break;

    case "delete":
        mode = "select";
        with (delete_icon) {
            event_user(1);
        }
        break;
    
    default:
        mode = "select";
        with (delete_icon) {
            target = other.choice_delete;
            hspeed = 8;
            event_user(1);
        }
    }
    break;

default:
    switch (name) {
    case "delete":
        game_audio_play_sound(LampPostSound);
        mode = "delete";
        with (delete_icon) {
            event_user(0);
        }
        break;

    default:
        game_audio_play_sound(WarpSound);
        game_save_select_current(selection.file_index);
        switch (name) {
        case "complete":
            switch (selection.location_index) {
            case 1: game_save_update_location(DemoZone2, selection.file_index); break;
            default: game_save_update_location(DemoZone1, selection.file_index);
            }

        case "existing":
            game_save_start(game_save_current());
            break;

        default:
            var file = instance_create(0, 0, GameSaveFile); // empty
            file.index = selection.file_index;
            switch (selection.character_index) {
            case 1: file.player_character = Sonic; break;
            case 2: file.player_character = Tails; break;
            case 3: file.player_character = Knuckles; break;
            default:
                file.player_character = Sonic;
                file.assist_character = Tails;
            }
            with (file) {
                event_user(0);
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Descend
switch (mode) {
case "confirm":
    game_save_delete(selection.file_index);
    if (selection.file_index == game_save_current()) {
        game_save_select_current(-1);
    }
    game_audio_play_sound(AchievementSound);
    with (selection) {
        event_user(2);
    }
    mode = "select";
    with (delete_icon) {
        target = other.choice_delete;
        hspeed = 8;
        event_user(1);
    }
    break;

default:
    var last = ds_list_size(choices) - 1;
    previous_index = index;
    
    var first = 0;
    if (mode == "delete") {
        first = 1;
    }
    
    if (is_undefined(index)) {
        index = last;
    } else {
        --index;
        if (index &lt; first) {
            index = first;
        }
    }
    
    if (not is_undefined(index) and index != previous_index) {
        with (selection) {
            selected = false;
        }
        selection = choices[| index];
        with (selection) {
            selected = true;
        }
    
        with (cursor) {
            target = other.selection;
            hspeed = -8;
            if (other.index == 0) {
                image_index = 1;
            } else {
                image_index = 0;
            }
            if (other.index == 0) {
                x += 2;
                y--;
            } else if (other.index == last - 1) {
                x -= 2;
                y++;
            }
        }
    
        if (mode == "delete") {
            game_audio_play_sound(BumperSound2);
            with (delete_icon) {
                target = other.selection;
                hspeed = -8;
                if (other.index == 0) {
                    x += 2;
                    y--;
                } else if (other.index == last - 1) {
                    x -= 2;
                    y++;
                }
            }
        } else {
            game_audio_play_sound(ReelSound);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Ascend
switch (mode) {
case "confirm":
    mode = "select";
    with (delete_icon) {
        target = other.choice_delete;
        hspeed = 8;
        event_user(1);
    }
    break;

default:
    var last = ds_list_size(choices) - 1;
    previous_index = index;
    
    var first = 0;
    if (mode == "delete") {
        first = 1;
    }
    
    if (is_undefined(index)) {
        index = first;
    } else {
        ++index;
        if (index &gt; last) {
            index = last;
        }
    }
    
    if (not is_undefined(index) and index != previous_index) {
        with (selection) {
            selected = false;
        }
        selection = choices[| index];
        with (selection) {
            selected = true;
        }

        with (cursor) {
            target = other.selection;
            hspeed = 8;
            if (other.index == last) {
                image_index = 1;
            } else {
                image_index = 0;
            }
            if (other.index == 1) {
                x -= 2;
                y++;
            } else if (other.index == last) {
                x += 2;
                y--;
            }
        }
    
        if (mode == "delete") {
            game_audio_play_sound(BumperSound2);
            with (delete_icon) {
                target = other.selection;
                hspeed = 8;
                if (other.index == 1) {
                    x -= 2;
                    y++;
                } else if (other.index == last) {
                    x += 2;
                    y--;
                }
            }
        } else {
            game_audio_play_sound(ReelSound);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
