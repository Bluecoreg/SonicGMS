<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1024</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize
image_speed = 0;

back = -1;
left = 0;
top = 0;
width = 0;
height = 0;

tile_horizontal = false;
tile_vertical = false;

x_absolute = xstart;
y_absolute = ystart;
x_scroll = 1;
y_scroll = 1;
x_separation = 0;
y_separation = 0;
x_speed = 0;
y_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Wrap texture
if (game_is_running()) {
    x = x mod (width + x_separation);
    y = y mod (height + y_separation);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move
if (game_is_running()) {
    if (x_speed != 0) {
        x += x_speed;
    }
    if (y_speed != 0) {
        y += y_speed;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Render
if (back != -1) {
    var fx = x_absolute + x + floor(view_xview[view_current] * x_scroll);
    var fy = y_absolute + y + floor(view_yview[view_current] * y_scroll);
    var sx = width + x_separation;
    var sy = height + y_separation;

    if (tile_horizontal) {
        var lx = view_xview[view_current] + ((fx - view_xview[view_current]) mod sx) - sx;
        var rx = view_xview[view_current] + view_wview[view_current] + sx;
    } else {
        var lx = fx;
        var rx = fx;
    }
    if (tile_vertical) {
        var ly = view_yview[view_current] + ((fy - view_yview[view_current]) mod sy) - sy;
        var ry = view_yview[view_current] + view_hview[view_current] + sy;
    } else {
        var ly = fy;
        var ry = fy;
    }

    var cx, cy;
    for (cy = ly; cy &lt;= ry; cy += sy) {
        for (cx = lx; cx &lt;= rx; cx += sx) {
            draw_background_part_ext(back, left, top, width, height, cx, cy, image_xscale, image_yscale, image_blend, image_alpha);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
