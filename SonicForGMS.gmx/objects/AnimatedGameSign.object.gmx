<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>GameSign</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize
index = 0;

current_duration = -1;
current_delay = -1;

moment_count = 0;
moment_duration = ds_list_create();
moment_delay = ds_list_create();
moment_x = ds_list_create();
moment_y = ds_list_create();
moment_xscale = ds_list_create();
moment_yscale = ds_list_create();
moment_angle = ds_list_create();
moment_blend = ds_list_create();
moment_alpha = ds_list_create();

inc_x = 0;
inc_y = 0;
inc_xscale = 0;
inc_yscale = 0;
inc_angle = 0;
inc_blend = 0;
inc_alpha = 0;

blend_color = image_blend;
blend_amount = 0;

destroy = true;
paused = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Clean up
ds_list_destroy(moment_duration);
ds_list_destroy(moment_delay);
ds_list_destroy(moment_x);
ds_list_destroy(moment_y);
ds_list_destroy(moment_xscale);
ds_list_destroy(moment_yscale);
ds_list_destroy(moment_angle);
ds_list_destroy(moment_blend);
ds_list_destroy(moment_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update
if (not paused) {
    if (moment_count &gt; 0) {
        if (current_delay &gt; 0) {
            --current_delay;
        } else {
            --current_duration;
            if (current_duration &lt;= 0) {
                if (index &lt; moment_count) {
                    current_duration = moment_duration[| index];
                    current_delay = moment_delay[| index];
                    x = moment_x[| index];
                    y = moment_y[| index];
                    image_xscale = moment_xscale[| index];
                    image_yscale = moment_yscale[| index];
                    image_angle = moment_angle[| index];
                    image_blend = moment_blend[| index];
                    image_alpha = moment_alpha[| index];
                    blend_color = image_blend;
                    ++index;
                    if (index == moment_count or current_duration == 0) {
                        inc_x = 0;
                        inc_y = 0;
                        inc_xscale = 0;
                        inc_yscale = 0;
                        inc_angle = 0;
                        inc_blend = 0;
                        inc_alpha = 0;
                    } else {
                        inc_x = (moment_x[| index] - x) / current_duration;
                        inc_y = (moment_y[| index] - y) / current_duration;
                        inc_xscale = (moment_xscale[| index] - image_xscale) / current_duration;
                        inc_yscale = (moment_yscale[| index] - image_yscale) / current_duration;
                        inc_angle = (moment_angle[| index] - image_angle) / current_duration;
                        inc_alpha = (moment_alpha[| index] - image_alpha) / current_duration;
                        if (blend_color != moment_blend[| index]) {
                            inc_blend = 1 / current_duration;
                        } else {
                            inc_blend = 0;
                        }
                    }
                } else if (destroy) {
                    instance_destroy();
                }
            } else {
                x += inc_x;
                y += inc_y;
                image_xscale += inc_xscale;
                image_yscale += inc_yscale;
                image_angle += inc_angle;
                blend_amount += inc_blend;
                image_alpha += inc_alpha;
                if (blend_amount != 0) {
                    image_blend = merge_colour(blend_color, moment_blend[| index], blend_amount);
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
