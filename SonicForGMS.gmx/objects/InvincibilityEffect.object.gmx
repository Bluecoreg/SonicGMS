<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>PlayerEffect</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize
radius = 16;
spacing = 2;
outer_rotation = 0;
outer_rot_speed = -22.5;
inner_rotation = 0;
inner_rot_speed = -11.25;
mirror = false;

offset_x = ds_list_create();
offset_y = ds_list_create();

repeat (spacing * 3) {
    ds_list_add(offset_x, xstart);
    ds_list_add(offset_y, ystart);
}

spark = array_create(8);

spark[0] = instance_create(xstart + radius, ystart, InvincibilitySpark);
spark[0].timeline_index = InvincibilitySparkAnim4;

spark[1] = instance_create(xstart - radius, ystart, InvincibilitySpark);
spark[1].timeline_index = InvincibilitySparkAnim4;
spark[1].timeline_position = 5;

spark[2] = instance_create(xstart, ystart - radius, InvincibilitySpark);
spark[2].timeline_index = InvincibilitySparkAnim3;

spark[3] = instance_create(xstart, ystart + radius, InvincibilitySpark);
spark[3].timeline_index = InvincibilitySparkAnim3;
spark[3].timeline_position = 6;

spark[4] = instance_create(xstart + radius, ystart, InvincibilitySpark);
spark[4].timeline_index = InvincibilitySparkAnim2;

spark[5] = instance_create(xstart - radius, ystart, InvincibilitySpark);
spark[5].timeline_index = InvincibilitySparkAnim2;
spark[5].timeline_position = 7;

spark[6] = instance_create(xstart, ystart + radius, InvincibilitySpark);
spark[6].timeline_index = InvincibilitySparkAnim1;

spark[7] = instance_create(xstart, ystart - radius, InvincibilitySpark);
spark[7].timeline_index = InvincibilitySparkAnim1;
spark[7].timeline_position = 5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Cleanup
for (var n = 0; n &lt; array_length_1d(spark); ++n) {
    instance_destroy(spark[n]);
}
ds_list_destroy(offset_x);
ds_list_destroy(offset_y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Animate
if (game_is_running()) {
    var sine, cosine;
    
    for (var n = 0; n &lt; array_length_1d(spark); ++n) {
        spark[n].depth = depth;
    }

    inner_rotation = angle_wrap(inner_rotation + inner_rot_speed);

    sine = dsin(inner_rotation);
    cosine = dcos(inner_rotation);

    mirror = !mirror;

    // first circle
    if (mirror) {
        spark[6].x = x + (cosine * radius);
        spark[6].y = y - (sine * radius);
        spark[7].x = x - (cosine * radius);
        spark[7].y = y + (sine * radius);
    } else {
        spark[6].x = x + (sine * radius);
        spark[6].y = y + (cosine * radius);
        spark[7].x = x - (sine * radius);
        spark[7].y = y - (cosine * radius);
    }

    outer_rotation = angle_wrap(outer_rotation + outer_rot_speed);

    sine = dsin(outer_rotation);
    cosine = dcos(outer_rotation);

    // second circle
    spark[4].x = offset_x[| 0] + (cosine * radius);
    spark[4].y = offset_y[| 0] - (sine * radius);
    spark[5].x = offset_x[| 0] - (cosine * radius);
    spark[5].y = offset_y[| 0] + (sine * radius);

    // third circle
    spark[2].x = offset_x[| spacing] - (sine * radius);
    spark[2].y = offset_y[| spacing] - (cosine * radius);
    spark[3].x = offset_x[| spacing] + (sine * radius);
    spark[3].y = offset_y[| spacing] + (cosine * radius);

    // fourth circle
    spark[0].x = offset_x[| spacing * 2] + (cosine * radius);
    spark[0].y = offset_y[| spacing * 2] - (sine * radius);
    spark[1].x = offset_x[| spacing * 2] - (cosine * radius);
    spark[1].y = offset_y[| spacing * 2] + (sine * radius);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Enqueue
if (game_is_running()) {
    if (instance_exists(source)) {
        ds_list_delete(offset_x, 0);
        ds_list_delete(offset_y, 0);
        ds_list_add(offset_x, source.x_int);
        ds_list_add(offset_y, source.y_int);
    } else {
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
