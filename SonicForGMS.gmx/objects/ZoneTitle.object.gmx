<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>GameSuspension</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize
image_speed = 0;

duration = 0;

blueLayerEnterSpeed = 16;
blueLayerExitSpeed = 32;
blueLayerEnterDuration = camera_height / blueLayerEnterSpeed;
blueLayerExitDuration = camera_height / blueLayerExitSpeed;

yellowLayerEnterSpeed = 16;
yellowLayerExitSpeed = 32;
yellowLayerEnterDuration = (camera_width / yellowLayerEnterSpeed) + 4;
yellowLayerExitDuration = camera_width / yellowLayerExitSpeed;
yellowLayerHeight = 64;
gameNameWidth = sprite_get_width(ZoneTitleS2GameNameSprite);
gameNameX = camera_width - gameNameWidth - 20;
gameNameY = camera_height - yellowLayerHeight + 8;

redLayerEnterSpeed = 16;
redLayerExitSpeed = 32;
redLayerX = 112;
redLayerEnterDuration = (camera_width / redLayerEnterSpeed) + 4;
redLayerExitDuration = redLayerX / redLayerExitSpeed;

labelEnterSpeed = 16;
labelExitSpeed = 32;
labelEnterDuration = (camera_width - 32) / labelEnterSpeed;
labelExitDuration = (camera_width - 32) / labelExitSpeed;
labelNameX = camera_width - 32;
labelNameY = 56;
labelZoneWordX = camera_width - 120;
labelZoneWordY = labelNameY + 24;
labelActX = camera_width - 56;
labelActY = labelZoneWordY;
labelShadowOx = 2;
labelShadowOy = 2;

labelWait1 = max(blueLayerEnterDuration, yellowLayerEnterDuration, redLayerEnterDuration);
redLayerWait = 70 + labelEnterDuration + (labelWait1 - redLayerEnterDuration);
yellowLayerWait = redLayerWait + redLayerExitDuration + (labelWait1 - yellowLayerEnterDuration);
blueLayerWait = yellowLayerWait + yellowLayerExitDuration + (labelWait1 - blueLayerEnterDuration);
labelWait2 = 45 + blueLayerWait + blueLayerExitDuration - labelEnterDuration;
waitUntilHUD = yellowLayerWait + yellowLayerExitDuration;
waitUntilMove = blueLayerWait + blueLayerExitDuration;

colorBlue = make_color_rgb(27, 72, 221);
colorYellow = make_color_rgb(255, 253, 0);
colorRed = make_color_rgb(255, 0, 0);

var player = game_player_find(0);
if (instance_exists(player)) {
    switch (player.character_id) {
    case Knuckles: colorBlue = make_color_rgb(0, 145, 0); break;
    case Tails: colorBlue = make_color_rgb(224, 144, 0); break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update
if (not instance_exists(postYellowLayer)) {
    with (ZoneTimeLimit) {
        enabled = true;
    }
}
if (not instance_exists(postBlueLayer)) {
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Setup
var name = game_zone_get_name();
var act = game_zone_get_act();


draw_set_font(global.GaslightFont);
labelNameX = (camera_width - 32) - string_width(name);


postBlack = instance_create(0, 0, AnimatedGameSign);
postBlack.sprite_index = ZoneTitleS2PixelSprite;
postBlack.depth = depth;
game_sign_add_moment(postBlack, yellowLayerWait, 0, 0, 0, camera_width, camera_height, 0, c_black, 1);


postBlueLayer = instance_create(0, 0, AnimatedGameSign);
postBlueLayer.sprite_index = ZoneTitleS2PixelSprite;
postBlueLayer.depth = depth - 1;
game_sign_add_moment(postBlueLayer, blueLayerEnterDuration, 0, 0, 0, camera_width, 0, 0, colorBlue, 1);
game_sign_add_moment(postBlueLayer, blueLayerExitDuration, blueLayerWait, 0, 0, camera_width, camera_height, 0, colorBlue, 1);
game_sign_add_moment(postBlueLayer, 0, 0, 0, 0, camera_width, 0, 0, colorBlue, 1);


postYellowLayer = instance_create(0, 0, AnimatedGameSign);
postYellowLayer.sprite_index = ZoneTitleS2PixelSprite;
postYellowLayer.depth = depth - 2;
game_sign_add_moment(postYellowLayer, yellowLayerEnterDuration, 0, camera_width + (yellowLayerEnterSpeed * 4), camera_height - yellowLayerHeight, 0, yellowLayerHeight, 0, colorYellow, 1);
game_sign_add_moment(postYellowLayer, yellowLayerExitDuration, yellowLayerWait, 0, camera_height - yellowLayerHeight, camera_width, yellowLayerHeight, 0, colorYellow, 1);
game_sign_add_moment(postYellowLayer, 0, 0, camera_width, camera_height - yellowLayerHeight, 0, yellowLayerHeight, 0, colorYellow, 1);


postGameName = instance_create(0, 0, AnimatedGameSign);
postGameName.sprite_index = ZoneTitleS2GameNameSprite;
postGameName.depth = depth - 3;
game_sign_add_moment(postGameName, yellowLayerEnterDuration, 0, gameNameX + camera_width + (yellowLayerEnterSpeed * 4), gameNameY, 1, 1, 0, c_white, 1);
game_sign_add_moment(postGameName, yellowLayerExitDuration, yellowLayerWait, gameNameX, gameNameY, 1, 1, 0, c_white, 1);
game_sign_add_moment(postGameName, 0, 0, gameNameX + camera_width, gameNameY, 1, 1, 0, c_white, 1);


postRedLayer = instance_create(0, 0, AnimatedGameSign);
postRedLayer.sprite_index = ZoneTitleS2PixelSprite;
postRedLayer.depth = depth - 4;
game_sign_add_moment(postRedLayer, redLayerEnterDuration, 0, 0, 0, redLayerX - (camera_width + (redLayerEnterSpeed * 4)), camera_height, 0, colorRed, 1);
game_sign_add_moment(postRedLayer, redLayerExitDuration, redLayerWait, 0, 0, redLayerX, camera_height, 0, colorRed, 1);
game_sign_add_moment(postRedLayer, 0, 0, 0, 0, 0, camera_height, 0, colorRed, 1);


postRedBorder = instance_create(0, 0, ZoneTitleRedFold);
postRedBorder.depth = depth - 5;
game_sign_add_moment(postRedBorder, redLayerEnterDuration, 0, redLayerX - (camera_width + (redLayerEnterSpeed * 4)), 0, 1, 1, 0, c_white, 1);
game_sign_add_moment(postRedBorder, redLayerExitDuration, redLayerWait, redLayerX, 0, 1, 1, 0, c_white, 1);
game_sign_add_moment(postRedBorder, 0, 0, 0, 0, 1, 1, 0, c_white, 1);


postLabelName = instance_create(0, 0, AnimatedLabeledGameSign);
postLabelName.label = name;
postLabelName.font = global.GaslightFont;
postLabelName.depth = depth - 6;
game_sign_add_moment(postLabelName, labelEnterDuration, labelWait1, labelNameX + (camera_width - 32), labelNameY, 1, 1, 0, c_white, 1);
game_sign_add_moment(postLabelName, labelExitDuration, labelWait2, labelNameX, labelNameY, 1, 1, 0, c_white, 1);
game_sign_add_moment(postLabelName, 0, 0, labelNameX + (camera_width - 32), labelNameY, 1, 1, 0, c_white, 1);


postLabelNameShadow = instance_create(0, 0, AnimatedLabeledGameSign);
postLabelNameShadow.label = postLabelName.label;
postLabelNameShadow.font = postLabelName.font;
postLabelNameShadow.depth = postLabelName.depth + 1;
game_sign_add_moment(postLabelNameShadow, labelEnterDuration, labelWait1, labelNameX + (camera_width - 32) + labelShadowOx, labelNameY + labelShadowOy, 1, 1, 0, c_black, 1);
game_sign_add_moment(postLabelNameShadow, labelExitDuration, labelWait2, labelNameX + labelShadowOx, labelNameY + labelShadowOy, 1, 1, 0, c_black, 1);
game_sign_add_moment(postLabelNameShadow, 0, 0, labelNameX + (camera_width - 32) + labelShadowOx, labelNameY + labelShadowOy, 1, 1, 0, c_black, 1);


postLabelZoneWord = instance_create(0, 0, AnimatedLabeledGameSign);
postLabelZoneWord.label = "ZONE";
postLabelZoneWord.font = global.GaslightFont;
postLabelZoneWord.depth = depth - 7;
game_sign_add_moment(postLabelZoneWord, labelEnterDuration, labelWait1, labelZoneWordX - (camera_width - 32), labelZoneWordY, 1, 1, 0, c_white, 1);
game_sign_add_moment(postLabelZoneWord, labelExitDuration, labelWait2, labelZoneWordX, labelZoneWordY, 1, 1, 0, c_white, 1);
game_sign_add_moment(postLabelZoneWord, 0, 0, labelZoneWordX - (camera_width - 32), labelZoneWordY, 1, 1, 0, c_white, 1);


postLabelZoneWordShadow = instance_create(0, 0, AnimatedLabeledGameSign);
postLabelZoneWordShadow.label = postLabelZoneWord.label;
postLabelZoneWordShadow.font = postLabelZoneWord.font;
postLabelZoneWordShadow.depth = depth - 7;
game_sign_add_moment(postLabelZoneWordShadow, labelEnterDuration, labelWait1, labelZoneWordX - (camera_width - 32) + labelShadowOx, labelZoneWordY + labelShadowOy, 1, 1, 0, c_black, 1);
game_sign_add_moment(postLabelZoneWordShadow, labelExitDuration, labelWait2, labelZoneWordX + labelShadowOx, labelZoneWordY + labelShadowOy, 1, 1, 0, c_black, 1);
game_sign_add_moment(postLabelZoneWordShadow, 0, 0, labelZoneWordX - (camera_width - 32) + labelShadowOx, labelZoneWordY + labelShadowOy, 1, 1, 0, c_black, 1);


postLabelAct = instance_create(0, 0, AnimatedGameSign);
postLabelAct.sprite_index = ZoneTitleS2ActSprite;
postLabelAct.image_index = act - 1;
postLabelAct.depth = depth - 8;
game_sign_add_moment(postLabelAct, labelEnterDuration, labelWait1, labelActX - (camera_width - 32), labelActY, 1, 1, 0, c_white, 1);
game_sign_add_moment(postLabelAct, labelExitDuration, labelWait2, labelActX, labelActY, 1, 1, 0, c_white, 1);
game_sign_add_moment(postLabelAct, 0, 0, labelActX - (camera_width - 32), labelActY, 1, 1, 0, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
