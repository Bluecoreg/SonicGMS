<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>EggMobileSprite</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>BossEggMobile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize
image_speed = 0;

owner = noone;

state = "appearing";

camera_left = 0;
camera_top = 0;

move_speed = 2;
move_limit_left = 128;
move_limit_right = CAMERA_WIDTH - 128;

destroy_time = 170;

chain_swing_direction = 0;
chain_swing_speed = 1.2;
chain_direction = 0;

chain_base = noone;
chain_base_max_distance = 40;
chain_base_distance = 0;

total_chain_links = 4;
chain_link_separation = 16;
for (var n = 0; n &lt; total_chain_links; ++n) {
    chain_link[n] = noone;
    chain_link_max_distance[n] = ((n + 1) * chain_link_separation);
    chain_link_distance[n] = 0;
}

chain_ball = noone;
chain_ball_separation = 32;
chain_ball_max_distance = chain_link_max_distance[total_chain_links - 1] + chain_ball_separation;
chain_ball_distance = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Attack
with (chain_base) {
    x = other.x;
    y = other.y + other.chain_base_distance;
}

for (var n = 0; n &lt; total_chain_links; ++n) {
    with (chain_link[n]) {
        x = other.x + dsin(other.chain_swing_direction) * (other.chain_link_distance[n]);
        y = other.y + other.chain_base_distance + dcos(other.chain_swing_direction) * (other.chain_link_distance[n]);
    }
}

with (chain_ball) {
    x = other.x + dsin(other.chain_swing_direction) * (other.chain_ball_distance);
    y = other.y + other.chain_base_distance + dcos(other.chain_swing_direction) * (other.chain_ball_distance);
}

if (game_is_running()) {
    switch (state) {
    case "appearing":
        y_speed = 1;
        if (base_y &gt;= camera_top + 54) {
            state = "centering";
        }
        break;
    
    case "centering":
        x_speed = -2;
        y_speed = -0.2;
        if (x &lt;= camera_left + CAMERA_WIDTH * 0.5) {
            x_speed = 0;
            y_speed = 0;
        
            chain_base = instance_create(x, y, GHZBossChainBase);
    
            for (var n = 0; n &lt; total_chain_links; ++n) {
                chain_link[n] = instance_create(x, y, GHZBossChainLink);
            }
    
            chain_ball = instance_create(x, y, GHZBossChainBall);
    
            state = "deploying";
        }
        break;
    
    case "deploying":
        chain_base_distance = min(++chain_base_distance, chain_base_max_distance);
    
        for (var n = 0; n &lt; total_chain_links; ++n) {
            chain_link_distance[n] = min(++chain_link_distance[n], chain_link_max_distance[n]);
        }
    
        chain_ball_distance = min(++chain_ball_distance, chain_ball_max_distance);
        if (chain_ball_distance &gt;= chain_ball_max_distance) {
            x_speed = -move_speed;

            chain_ball.reaction_script = player_react_to_hazard;

            state = "swinging";
        }
        break;
    
    case "swinging":
        chain_direction += chain_swing_speed;
        chain_swing_direction = dsin(chain_direction) * 90;

        if (chain_swing_direction &lt;= -90) {
            if (x &lt; camera_left + move_limit_right) {
                x_speed = move_speed;
            }
        }
        else if (chain_swing_direction &gt;= 90) {
            if (x &gt; camera_left + move_limit_left) {
                x_speed = -move_speed;
            }
        }

        if (x &lt; camera_left + move_limit_left) {
            x = camera_left + move_limit_left;
            x_speed = 0;
        }
        if (x &gt; camera_left + move_limit_right) {
            x = camera_left + move_limit_right;
            x_speed = 0;
        }
        break;
    
    case "destroyed":
        --destroy_time;
        if (destroy_time mod 6 == 0) {
            var ox = x + irandom_range(-24, 24);
            var oy = y + irandom_range(-24, 24);
            with (SpriteParticles) {
                part_particles_create(system, ox, oy, heavy_explosion, 1);
            }
            game_audio_play_sound(BossExplosionSound, 0, false);
        }
        if (destroy_time &lt;= 0) {
            y_speed = 3.7;
            state = "rising";
        }
        break;
    
    case "rising":
        y_speed -= 0.13;
        if (y_speed &lt; -2) {
            with (owner) {
                event_user(0);
                state = "finished";
            }
            state = "escaping";
        }
        break;
    
    case "escaping":
        x_speed = 3;
        y_speed = -0.5;
        if (not instance_on_screen(self, 32)) {
            instance_destroy();
        }
        break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Destroy
state = "destroyed";
x_speed = 0;
y_speed = 0;

instance_destroy(chain_base);
for (var n = 0; n &lt; total_chain_links; ++n) {
    instance_destroy(chain_link[n]);
}

with (chain_ball) {
    reaction_script = -1;
    destroy_time = 110;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
